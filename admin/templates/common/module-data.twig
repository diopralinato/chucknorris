        <script type="text/javascript">

        /* Default class modification */
        $.extend( $.fn.dataTableExt.oStdClasses, {
          sSortAsc: 'sort sort-up',
          sSortDesc: 'sort sort-down',
          sSortable: 'sort',
          sSortableAsc: 'sort sort-up',
          sSortableDesc: 'sort sort-down',
          sSortableNone: 'sort sort-none'
        });

        /* Table initialisation */
        $(document).ready(function() {
          // Datatables filter highlighting
          jQuery.fn.dataTableExt.oApi.fnSearchHighlighting = function(oSettings) {
            // Initialize regex cache
            oSettings.oPreviousSearch.oSearchCaches = {};

            oSettings.oApi._fnCallbackReg( oSettings, 'aoRowCallback', function( nRow, aData, iDisplayIndex, iDisplayIndexFull) {
              // Initialize search string array
              var searchStrings = [];
              var oApi = this.oApi;
              var cache = oSettings.oPreviousSearch.oSearchCaches;
              // Global search string
              // If there is a global search string, add it to the search string array
              if (oSettings.oPreviousSearch.sSearch) {
                searchStrings.push(oSettings.oPreviousSearch.sSearch);
              }
              // Individual column search option object
              // If there are individual column search strings, add them to the search string array
              if ((oSettings.aoPreSearchCols) && (oSettings.aoPreSearchCols.length > 0)) {
                for (var i in oSettings.aoPreSearchCols) {
                  if (oSettings.aoPreSearchCols[i].sSearch) {
                    searchStrings.push(oSettings.aoPreSearchCols[i].sSearch);
                  }
                }
              }
              // Create the regex built from one or more search string and cache as necessary
              if (searchStrings.length > 0) {
                var sSregex = searchStrings.join("|");
                if (!cache[sSregex]) {
                  var regRules = "("
                        ,   regRulesSplit = sSregex.split(' ');

                  regRules += "("+ sSregex +")";
                  for(var i=0; i<regRulesSplit.length; i++) {
                    regRules += "|("+ regRulesSplit[i] +")";
                  }
                  regRules += ")";

                  // This regex will avoid in HTML matches
                  cache[sSregex] = new RegExp(regRules+"(?!([^<]+)?>)", 'ig');
                }
                var regex = cache[sSregex];
              }
              // Loop through the rows/fields for matches
              jQuery('td', nRow).each( function(i) {
                // Take into account that ColVis may be in use
                var j = oApi._fnVisibleToColumnIndex( oSettings,i);
                // Only try to highlight if the cell is not empty or null
                if (aData[j]) {
                  // If there is a search string try to match
                  if ((typeof sSregex !== 'undefined') && (sSregex)) {
                    this.innerHTML = aData[j].replace( regex, function(matched) {
                      return "<span class='filterMatches'>"+matched+"</span>";
                    });
                  }
                  // Otherwise reset to a clean string
                  else {
                    this.innerHTML = aData[j];
                  }
                }
              });
              return nRow;
            }, 'row-highlight');
            return this;
          };

          renderDataTable("#table");
          $('.dataTables_filter input').attr("placeholder", "Filter records");
          function renderDataTable(selector) {
            var out = [];
            var tables = $(selector);
            var sorting;

            for ( var i=0, iLen=tables.length ; i<iLen ; i++ ) {
              var defaultCol = $('th', tables[i]).index($(".dataTable-defaultSort",tables[i]));
              if(defaultCol >= 0){
                sorting = [ defaultCol, '{{ settings.order }}' ];
              } else {
                sorting = [0, '{{ settings.order }}'];
              }

              var oTable2 = $(tables[i]).dataTable({
                "aaSorting": [ sorting ],
                "bScrollCollapse":true,
                "sDom": "<'row-fluid'<'span12'f>r>>",
                "bPaginate": false,
                "bSort": true,
                "bInfo": false,
                "bAutoWidth": false,
                "oLanguage": {
                  "sSearch": ""
                },
                "aoColumnDefs": [
                  {"bSearchable": false, "bSortable": false, "aTargets": ["dataTable-exclude"]},
                  {"bVisible":false, "aTargets" : ["dataTables_notVisible"]}
                ],
              } );
              oTable2.fnSearchHighlighting();
              out.push( oTable2 );

            }
            return out;
          }
          // $("[rel=tooltip]").tooltip({title: 'Edit item', delay: { show: 300, hide: 0 }, placement: 'left'});

          $('#table > tbody > tr > td:not(:last-child)').filter(function(index){ return $('.thumbnail', this).length == 0; }).click(function() {
            var id = $(this).parent('tr').data('id');
            $(location).attr("href", "/admin/{{ module }}/edit/" + id + "?start={{ pagination.start }}");
          });

          $('a.delete').click(function() {
            var id = $(this).attr('id');
            if(id) {
              $('#delete-confirm.alert').show().animate({opacity: 1.0}, 3000);
              $('#delete-confirm a.delete-confirm').data('id', id);
            }
          });

          $('#delete-confirm a.cancel').click(function() {
            $('#delete-confirm.alert').hide();
          });

          $('#delete-confirm a.delete-confirm').click(function() {
            var id = $(this).data('id');
            window.location = '/admin/{{ module }}/delete/' + id + '?start={{ pagination.start }}';
          });

          $('#delete-result').bind('closed', function () {
            window.location = '/admin/{{ module }}/?start={{ pagination.start }}';
          });

          {% if settings.run.path %}
          // Run cron script jQuery
          $('a.run').bind('click', function(event) {
            event.preventDefault();
            $(this).unbind('click');
            $(this).html('<i class="icon-refresh"></i> {{ settings.run.button_running }}')
            $.get('{{ settings.run.path }}', function(data) {
              $('#run.modal').modal({show: true, backdrop: 'static'});
              $('#run.modal .modal-body').html(data);
              console.log('Success');
            });
          });
          $('#run.modal').on('hidden', function () {
            window.location = '/admin/{{ module }}';
          });
          {% endif %}

          $('a.settings').on('click', function(event) {
            event.preventDefault();
            $('#settings.modal').modal({show: true, backdrop: 'static'});
            console.log('Settings');
          });

          $(".thumbnail").live("click", function(e) {
            e.preventDefault();
            $(this).next('.modal').modal('show');
          });

          $('#table > tbody > tr:first').find('td[data-ordering] i.move').tooltip({
            title: 'Drag to re-order',
            placement: 'bottom',
            trigger: 'manual'
          }).tooltip('show');

          $('#table > tbody > tr').on("mouseenter", "td[data-ordering]", function(){
            $('i.move').tooltip('hide');
          });

        });

        {% if settings.orderby == 'ordering' %}
        $(window).load(function() {
          var firstOrder = $('#table tbody tr:first').find('td[data-ordering]').data('ordering');
          var startPosition;
          var endPosition;
          var td_height = $('#table tbody tr td:first').outerHeight();

          $("#table > tbody").sortable({
            cursor: "move",
            placeholder: "placeholder",
            start:function(event, ui){
              ui.placeholder.height(td_height);
              startPosition = ui.item.prevAll().length + 1;
              /* When using a table for sorting, the placeholder tr must have cells, or it
               * is incorrectly formed. Make sure the placeholder row always has cells. */
              var numCells = $("tr:first").children().size();

              if ($("tr.placeholder").children().size() !== numCells) {
                i = 1;
                while (i <= numCells) {
                  $("tr.placeholder").append("<td></td>");
                  i++;
                }
              }
            },
            update: function(event, ui) {
              endPosition = ui.item.prevAll().length + 1;
              $(ui.item).find('td[data-ordering]').attr('data-ordering', endPosition).html('<i class="icon-move move pull-right"></i> ' + endPosition);

              var json = {};

              $('#table tbody tr').find('td[data-ordering]').each(function(index) {
                $(this).attr('data-ordering', (index + firstOrder)).html('<i class="icon-move move pull-right"></i>' + (index + firstOrder));
                var id = $(this).parent().data('id');
                // Push new ordering to JSON object
                json[id] = (index + firstOrder);
              });

              $('#loader').removeClass('hidden');

              $.ajax ({
                type: "POST",
                url: '/admin/',
                dataType: 'json',
                async: false,
                data: {module: '{{ module }}', dragdropordering: json},
                success: function () {
                  console.log('Re-order success');
                  setTimeout(function() {
                    $('#loader').addClass('hidden');
                  }, 1000);
                }
              });
            },
            helper: function(e, tr) {
              var $originals = tr.children();
              var $helper = tr.clone();
              $helper.children().each(function(index) {
                // Set helper cell sizes to match the original sizes
                $(this).width($originals.eq(index).width());
              });
              return $helper;
            },
            handle: 'td[data-ordering]'
          });
        });
        {% endif %}
        </script>

        <div class="span9">
          <div class="page-header">
            <a class="btn btn-small pull-right settings"><i class="icon-cog"></i></a>
            {% if settings.add == 'true' or settings.add > pagination.total %}
            <a class="btn btn-small pull-right" href="/admin/{{ module }}/add" style="margin-right:5px;"><i class="icon-plus"></i> Add new</a>
            {% endif %}
            {% if settings.run.path %}
            <a class="btn btn-small pull-right run" style="margin-right:5px;"><i class="icon-refresh"></i> {{ settings.run.button }}</a>
            {% endif %}
            <h1>
              View
              <small>{{ module|title }}</small>
            </h1>
          </div>
          <div id="delete-confirm" class="alert alert-block alert-error hide fade in">
            <h4 class="alert-heading">Confirm deletion...</h4>
            <p>Are you sure you want to delete this item?</p>
            <p>
              <a class="btn btn-small btn-danger delete-confirm" href="#" data-id="" ><i class="icon-trash icon-white"></i> Delete</a> <a class="btn btn-small cancel" href="#">Cancel</a>
            </p>
          </div>
          {% if result %}
          <div id="delete-result" class="alert alert-block alert-error fade in" id="modal">
            <a class="close" data-dismiss="alert" href="#">&times;</a>
            <strong>{{ result.title }}</strong> {{ result.message }}
          </div>
          {% endif %}
          
          {% if data %}
          <table cellpadding="0" cellspacing="0" border="0" class="table table-striped table-bordered" id="table">
            <colgroup>
            {% for item in data %}
            {% if loop.first %}
            {% for param in item %}
            {% if loop.first %}
              <col>
            {% else %}
              <col>
            {% endif %}
            {% endfor %}
            {% endif %}
            {% endfor %}
            {% if settings.edit or settings.delete %}
              <col style="width:{% if settings.edit + settings.delete == 2 %}150px{% elseif settings.edit == 1 %}75px{% else %}85px{% endif %};">
            {% endif %}
            </colgroup>
            <thead>
              <tr class="header">
            {% for item in data %}
            {% if loop.first %}
            {% for param in item|keys %}
                <th {% if param == settings.orderby %}class="dataTable-defaultSort {{ param }}"{% endif %}>
                  <div class="sort">
                      <div class="sort-up"></div>
                      <div class="sort-down"></div>
                  </div>
                  {{ param|capitalize }}
                </th>
            {% endfor %}
            {% endif %}
            {% endfor %}
            {% if settings.edit == 1 or settings.delete == 1 %}
                <th class="dataTable-exclude actions {% if settings.edit == 1 and settings.delete == 1 %}both{% elseif settings.edit == 1 and settings.delete == 0 %}edit{% else %}delete{% endif %}">Actions</th>
            {% endif %}
              </tr>
            </thead>
            <tbody>
            {% for item in data %}
              <tr data-id="{{ item.id }}" rel="tooltip">
              {% for key, info in item %}
                <td{% if key == 'ordering' %} data-ordering="{{ info }}"{% endif %}>{% if key == 'ordering' %}<i class="icon-move move pull-right"></i>{% endif %}{{ info|raw }}</td>
              {% endfor %}
                <td class="actions">
            {% if data %}
            {% if settings.edit == 1 %}
            <div class="btn-group">
              <a class="btn btn-small" href="/admin/{{ module }}/edit/{{ item.id }}?start={{ pagination.start }}"><i class="icon-edit"></i> Edit</a>
              {% endif %}
              {% if settings.delete == 1 %}
              <a class="btn btn-small delete" id="{{ item.id }}" href="#"><i class="icon-trash"></i> Delete</a>
            </div>
            {% endif %}
            {% endif %}
                </td>
              </tr>
            {% endfor %}
            </tbody>
          </table>
          {% endif %}

          {% if pagination.total > pagination.limit %}
          <div class="pagination pagination-centered clearfix">
            {{ pagination.template|raw }}
          </div>
          {% endif %}


        {% if settings.run.path %}
        <div class="modal fade hide" id="run">
          <div class="modal-header">
            <a class="close" data-dismiss="modal">×</a>
            <h3>Results</h3>
          </div>
          <div class="modal-body"></div>
          <div class="modal-footer">
            <a href="#" class="btn btn-primary" data-dismiss="modal">Close</a>
          </div>
        </div>
        {% endif %}

          <div class="modal fade hide" id="settings">
            <div class="modal-header">
              <a class="close" data-dismiss="modal">×</a>
              <h3>Parameters <small>{{ module|title }}</small></h3>
            </div>
            <div class="modal-body">
              <h4>Global parameters for this model</h4>
              <p>Coming soon...</p>
              {#<form>#}
                {#<div class="control-group">#}
                  {#<label class="control-label">Test</label>#}
                  {#<div class="controls">#}
                    {#<input type="text">#}
                  {#</div>#}
                {#</div>#}
              {#</form>#}
            </div>
            <div class="modal-footer">
              <button type="submit" class="btn btn-primary">Save</button>
              <a href="#" class="btn" data-dismiss="modal">Close</a>
            </div>
          </div>

        </div>